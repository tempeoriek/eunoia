@model HeaderLinksModel
@using Nop.Web.Models.Common;
@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Localization
@using Nop.Web.Framework.Themes

@{

	//logo path
	var currentThemeName = "v1"; //EngineContext.Current.Resolve<IThemeContext>().WorkingThemeName;
	var logo = "~/Themes/" + currentThemeName + "/Content/images/logo.png";

	//store name
	var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);

	//current category ID
	int currentCategoryId = 0;
	if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
		Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
	{
		currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
	}


	//current product ID
	int currentProductId = 0;
	if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
		Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
	{
		currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
	}

	string about, newproduct, contact, saleall;
	about = newproduct = contact = saleall = string.Empty;
	var url = HttpContext.Current.Request.Url.AbsolutePath;
	if (url.Contains("/about"))
	{
		about = "active";
	}
	else if (url.Contains("/newproducts"))
	{
		newproduct = "active";
	}
	else if (url.Contains("/contact"))
	{
		contact = "active";
	}
	else if (url.Contains("sale-all"))
	{
		saleall = "active";
	}
  string absolutepath = HttpContext.Current.Request.Url.AbsolutePath;
}


@*desktop navbar*@
<div class="mobile-left-sidebar-overlay"></div>
<div class="mobile-left-sidebar d-flex justify-content-center">
	<div class=" d-flex flex-column" style="top:40vh;color:#D3A774">
		<form action="~/search" autocomplete="on">
			<input class="search-nav mb-5" id="search" name="q" type="text" placeholder="Type something to search">
		</form>
	</div>
</div>


<div class="fixed-top d-none d-md-block main-bar" style="margin-top: 0">
	@Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId, isSidebar = false })

	<div style="position: absolute; top: 0; right: 0; width: 65%;">
		<div class="row" style="height:50px;">
			<div class="col-md-6 d-flex justify-content-center" style="padding-top: 4%;">
				<div class="d-flex">
					<a href="~/">
						<img src="~/Themes/v1/Content/images/logo.png" class="brandImage" />
					</a>
				</div>
			</div>

			<div class="col-md-6  d-flex justify-content-center p-0 m-0">
				<span class="category-item mr-5 show-mobile-menu-btn mr-5" style="cursor:pointer; padding-top: 8%;">Search</span>
				<ul class="list-unstyled list-inline" style="padding-top: 8%;">
					@if (Model.IsAuthenticated)
						{
							<li>
								<div class="dropdown">
									<a href="#" class="nav-item category-item mr-5">Account</a>
									<div class="dropdown-content2 text-left">
										<a href="~/order/ConfirmPayments">Confirm Payment</a>
										<a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a>
										<a href="@Url.RouteUrl("CustomerInfo")">Personal Info</a>
										<a href="@Url.RouteUrl("CustomerChangePassword")">Change Password</a>
										<a href="~/customer/addressAdd">Address Book</a>
										<a href="@Url.RouteUrl("Logout")"><i class="fa fa-unlock-alt" aria-hidden="true"></i> Logout</a>
									</div>
								</div>
							</li>
						}
						else
						{
							<li> 
								<a href="~/login" class="signin btn-login mr-2 category-item mr-5">Login</a>
							</li>
						}
				</ul>
				@if (Model.ShoppingCartEnabled)
				{
					var cartItem = "0";
					var cssCartItem = "bag-empty";
					if (Model.ShoppingCartItems > 0)
					{
						cartItem = string.Format("{0}", Model.ShoppingCartItems);
						cssCartItem = "shopping-bag";
					}
					<a href="#bag" onclick="$('.aside').asidebar('open')" class="category-item mr-5" style="padding-top: 8%;">
							<span>Cart (@cartItem)</span>
					</a>
				}

			</div>
		</div>
	</div>
</div>


@*overlay shopping cart*@
<div class="aside">
	<div class="aside-header"><span class="close" data-dismiss="aside" aria-hidden="true">&times;</span></div>
	<div class="aside-contents">
		<div id="bag">@Html.Action("FlyoutShoppingCart", "ShoppingCart")</div>
	</div>
</div>
<div class="aside-backdrop"></div>

@*mobile navbar*@
<div class="d-block d-md-none">
	<nav class="navbar navbar-expand-md sidebarNavigation fixed-top" data-sidebarClass="navbar-dark" style="background-color:#fff; ">
		<div class="text-center" style="width:100%;">
			<div class="row m-1">

				<div class="col-3 d-flex justify-content-start">
					<div class="">
						<button class="navbar-togglers leftNavbarToggler btn-toggle" type="button" data-target="#navbarsExampleDefault"
								aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
							<div class=""><img src="~/Themes/v1/Content/images/menu.svg" /></div>
						</button>
					</div>
				</div>

				<div class="col-6 d-flex justify-content-center">
					<a class="navbar-brand" href="~/"><img class="img-fluid brandImage" src="~/Themes/v1/Content/images/logo.png" /></a>
				</div>

				<div class="col-3 pl-1">
					<div class="mini-menu pull-right d-flex">
						@if (Model.ShoppingCartEnabled)
						{
							var cartItem = "0";
							var cssCartItem = "bag-empty";
							if (Model.ShoppingCartItems > 0)
							{
								cartItem = string.Format("{0}", Model.ShoppingCartItems);
								cssCartItem = "bag";
							}
							<a href="#bag" onclick="$('.aside').asidebar('open')">
								<div id="icbag-panel" class="@cssCartItem align-items-center d-flex">
									<span id="mCartItemsQty" class="xans-element-xans-layout xans-layout-orderbasketcount cart-qty">
										<span style="color:#707070;margin-left:-8px; font-size: 12.8px;">
											Cart&nbsp;(&nbsp;@cartItem &nbsp;)
										</span>
									</span>
								</div>
							</a>
						}
					</div>
				</div>



				<div class="navbar-collapse" id="navbarsExampleDefault">
					<div class="d-block d-md-none">
						<div class="row">
							<div class="col-4 d-flex justify-content-center">
								<span onclick="closeMenu()"><img src="~/Themes/v1/Content/images/menu.svg" /></span>
							</div>

							<div class="col-4 d-flex justify-content-center">
								<a class="navbar-brand" href="~/"><img class="img-fluid store-logo" src="~/Themes/v1/Content/images/logo.png" /></a>
							</div>

							<div class="col-4">
								@if (Model.ShoppingCartEnabled)
								{
									var cartItem = "0";
									var cssCartItem = "bag-empty";
									if (Model.ShoppingCartItems > 0)
									{
										cartItem = string.Format("{0}", Model.ShoppingCartItems);
										cssCartItem = "bag";
									}
									<a href="#bag" onclick="$('.aside').asidebar('open')">
										<div id="icbag-panel" class="@cssCartItem pt-2">
											<span id="mCartItemsQty" style="color:#707070; font-size: 12.8px;">
												Cart&nbsp;(&nbsp;@cartItem &nbsp;)
											</span>
										</div>
									</a>
								}
							</div>
						</div>

						@Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId, isMobile = true })
						<a href="#" class="" onclick="openSearch()" style="padding-top:2px;padding-right:12px;">Search</a>
						<ul class="list-unstyled list-inline">
							@if (Model.IsAuthenticated)
							{
								<li class="dropdown dropright-list">
									<a href="#" class="dropbtn" style="font-size:12px;" data-toggle="collapse" data-target="#collapse-nav2" aria-expanded="false" aria-controls="collapse-nav2">My Account</a>
									<div class="collapse" id="collapse-nav2" style="font-size:12px;">
										<a href="~/order/ConfirmPayments">Confirm Payment</a>
										<a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a>
										<a href="@Url.RouteUrl("CustomerInfo")">Personal Info</a>
										<a href="@Url.RouteUrl("CustomerChangePassword")">Change Password</a>
										<a href="~/customer/addressAdd">Address Book</a>
										<a href="@Url.RouteUrl("Logout")"><i class="fa fa-unlock-alt" aria-hidden="true"></i> Logout</a>
									</div>
								</li>
							}
							else
							{
								<li><a href="~/login" class="signin btn-login" style="font-size:12px;">Sign In/Sign Up</a></li>
							}

						</ul>
					</div>
				</div>
			</div>
		</div>
	</nav>
</div>

<div class="overlay2 d-sm-none" id="myOverlay">
	<span class="closebtn" onclick="closeSearch()" title="Close Overlay">close</span>
	<div class="overlay-content">
		<form action="~/search" autocomplete="on">
			<input class="search-nav mb-5" id="search" name="q" type="text" placeholder="Type something">
		</form>
	</div>
</div>



<script>
	window.onload = function () { 
		if (window.jQuery) { 
			$(document).ready(function () { 
				$(".sidebarNavigation .navbar-collapse").hide().clone().appendTo("body").removeAttr("class").addClass("sideMenu").show(); 
				$("body").append("<div class='overlay'></div>"); 
				$(".navbar-toggle, .navbar-togglers").on("click", function () { 
					$(".sideMenu").addClass($(".sidebarNavigation").attr("data-sidebarClass")); 
					$(".sideMenu, .overlay, .xclose").toggleClass("open"); 
					$(".overlay, .xclose").on("click", function () { 
						$(this).removeClass("open"); $(".sideMenu").removeClass("open") }) }); 
						$("body").on("click", ".sideMenu.open .nav-item", function () { 
							if (!$(this).hasClass("dropdown")) { 
								$(".sideMenu, .overlay, .xclose").toggleClass("open") } }); 
								$(window).resize(function () { 
									if ($(".navbar-toggler").is(":block")) { 
										$(".sideMenu, .overlay").hide() 
									} else { 
										$(".sideMenu, .overlay, .xclose").show() 
									} 
								}) 
			}) 
		} else { 
				console.log("sidebarNavigation Requires jQuery") 
			} 
		}

	$(document).on('click', '.dropdown', function (e) {
		e.stopPropagation();
		$('.dropdown').not($(this)).removeClass('active');
		$(this).toggleClass('active');
	});

	$(document).on('click', function () {
		$('.dropdown').removeClass('active');
	});

	$(document).on('click', '.dropdown-content', function (e) {
		e.stopPropagation();
	})

</script>

@if (Model.ShoppingCartEnabled)
{
	<script type="text/javascript">
		$(document).ready(function () {

			if (
				$('.toggle > input').is(':checked') &&
				!$(event.target).parents('.toggle').is('.toggle')
			) {
				$('.toggle > input').prop('checked', false);
			}


			$('.li-header-mini-cart').on('mouseenter', '#topcartlink', function () {
				$('#flyout-cart').addClass('active');
			});
			$('.li-header-mini-cart').on('mouseleave', '#topcartlink', function () {
				$('#flyout-cart').removeClass('active');
			});
			$('.li-header-mini-cart').on('mouseenter', '#flyout-cart', function () {
				$('#flyout-cart').addClass('active');
			});
			$('.li-header-mini-cart').on('mouseleave', '#flyout-cart', function () {
				$('#flyout-cart').removeClass('active');
			});

		});

		function openSearch() {
			document.getElementById("myOverlay").style.display = "block";
		}

		function closeSearch() {
			document.getElementById("myOverlay").style.display = "none";
		}
		function showMobileMenu() {
			$('.mobile-left-sidebar').addClass('active');
			$('.mobile-left-sidebar-overlay').addClass('active');
		}
		function closeMenu() {
			$('.sideMenu').removeClass('open');
			$('.overlay').removeClass('open');
			$('.mobile-category-menu').attr('style', "display: block !important;");
	    $('.header-links').attr('style', "display: none !important;;");
		}
		function closeMobileMenu() {
			$('.mobile-left-sidebar').removeClass('active');
			$('.mobile-left-sidebar-overlay').removeClass('active');
		}
		$('.show-mobile-menu-btn').click(showMobileMenu);
		$('.mobile-left-sidebar-overlay').click(closeMobileMenu);
		$('.close-mobile-menu-btn').cli


	</script>
}