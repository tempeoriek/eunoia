@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
  //Layout = "~/Views/Shared/_LayoutTwo.cshtml";

  //title, meta
  Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
  Html.AddMetaDescriptionParts(Model.MetaDescription);
  Html.AddMetaKeywordParts(Model.MetaKeywords);

  var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

  //canonical URL
  if (seoSettings.CanonicalUrlsEnabled)
  {
    var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
    Html.AddCanonicalUrlParts(productUrl);
  }

  //open graph META tags
  if (seoSettings.OpenGraphMetaTags)
  {
    var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
    Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
    Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
  }

  //Twitter META tags
  if (seoSettings.TwitterMetaTags)
  {
    var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
    Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
    Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
  }


}




<div class="container product-detail mt-default">
  <div class="row">
    <div class="col-md-1">
    </div>
    <div class="col-12 col-md-4 mt-2 mr-3">

      @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
      {
        <div class="row" style="border-bottom: 1px solid;" style itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
          <div class="col-6 col-md-6 text-left" style="padding: 0; margin: 0;">
            <h1 itemprop="name">@Model.Name</h1>
          </div>
          <div class="col-6 col-md-6 text-right" style="padding: 0; margin: 0; display: flex; justify-content: flex-end; align-items: center;">
            @{
              var dataDictPrice = new ViewDataDictionary();
              dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
              @Html.Partial("_ProductPrice", Model.ProductPrice, dataDictPrice)
            }
          </div>
        </div>

        @* <div>
          <div class="row nav nav-tabs pt-4" role="tablist">
            <div class="col-6 col-md-4 product-desc active text-left p-0" role="presentation">
              <a href="#description" aria-controls="description" role="tab" data-toggle="tab">DESCRIPTION</a>
            </div>
            <div class="col-6 product-desc col-md-4 text-left p-0" role="presentation">
              <a href="#instruction" aria-controls="instruction" role="tab" data-toggle="tab">INSTRUCTION</a>
            </div>
          </div>

          <div class="row tab-content">
            <div class="tab-pane pt-5 pb-2 col-12 col-md-8 active" style="padding: 0;" role="tabpanel" id="description">
              @Html.Raw(Model.FullDescription)
            </div>
            <div class="tab-pane pt-5 pb-2 col-12 col-md-8" style="padding: 0;" role="tabpanel" id="instruction">
              @Html.Raw(Model.ShortDescription)
            </div>
          </div>
        </div> *@
        <div class="pt-4">
          <!-- Nav tabs -->
          <div class="row pb-3">
            <ul class="nav p-0" role="tablist">
              <li role="presentation" class="active mr-4"><a href="#desc" class="product-desc active show" aria-controls="desc" role="tab" data-toggle="tab">DESCRIPTION</a></li>
              <li role="presentation"><a href="#instruction" class="product-desc" aria-controls="instruction" role="tab" data-toggle="tab">INSTRUCTION</a></li>
            </ul>
          </div>

          <!-- Tab panes -->
          <div class="row tab-content">
            <div role="tabpanel" class="tab-pane active" id="desc" style="width: 75%;">
              @Html.Raw(Model.FullDescription)
            </div>
            <div role="tabpanel" class="tab-pane" id="instruction" style="width: 75%;">
              @Html.Raw(Model.ShortDescription)
            </div>
          </div>

        </div>
        <br>
      }
   
      @{
        //notify me if oos
        var totalstock = 0;
        foreach (var pa in Model.ProductAttributes)
        {
          foreach (var s in pa.Values)
          {
            totalstock += s.VariantStockQuantity;
          }
        }

        if (totalstock >= 1)
        {

          <p style="margin: 0;">SIZE</p>
          <div class="row no-gutters" style="margin-left: -8px;">
            <div class="col-6">
              @{
                var dataDictAttributes = new ViewDataDictionary();
                dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
              }
            </div>
          </div>
          
          <br>
          
          <p style="margin: 0;">QUANTITY</p>
          <div class="row no-gutters">
            @{
              var dataDictAddToCart = new ViewDataDictionary();
              dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
              @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
            }
          </div>

        }
        else
        {
          <!--Back in stock subscription-->
          @*@Html.Partial("_BackInStockSubscription", Model)*@

          <p class="out-of-stock" style="font-style:italic;">
            Sorry, this product is completely out of stock
          </p>

        }
      }
    </div>

    <div class="col-12 col-md-6">
      @Html.Partial("_ProductDetailsPictures", Model)
    </div>
  </div>



      <!-- recommendation--->
      @*Automatic*@
      @*@Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })*@

      @*Manual*@
      @*@Html.Action("CrossSellProducts", "Product", new { productId = Model.Id })*@
</div>

  <script>
    $('.add').click(function () {
      if ($(this).prev().val() < 9) {
        $(this).prev().val(+$(this).prev().val() + 1);
      }
    });
    $('.sub').click(function () {
      if ($(this).next().val() > 1) {
        if ($(this).next().val() > 1) $(this).next().val(+$(this).next().val() - 1);
      }
    });

    function btnclick() {
      if ($(".btn-addcart").innerHTML == "ADD TO BAG") {
        $(".btn-addcart").innerHTML = "✓ SEE BAG";
      }
      else {
        $(".btn-addcart").innerHTML = "ADD TO BAG";
      }
    }


    console.log("NIH SCRIPT CUK")
    var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
    console.log(model);    
  </script>
