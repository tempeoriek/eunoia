@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;


  <div class="col-6">

    @if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
    {
      <div class="add2cart">
        @if (Model.UpdatedShoppingCartItemId > 0)
        {
          @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
        }

        @if (!Model.DisableBuyButton)
        {
          <div class="select-quantity d-flex flex-column">

            @if (Model.CustomerEntersPrice)
            {
              <div class="customer-entered-price">
                <div class="price-input">
                  @Html.LabelFor(model => model.CustomerEnteredPrice, new { @class = "enter-price-label" }, ":")
                  @Html.TextBox("CustomerEnteredPrice", Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice)), new { @class = "enter-price-input" })
                </div>
                <div class="price-range">
                  @Model.CustomerEnteredPriceRange
                </div>
              </div>
            }

            @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
            {
              <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
            }

            @if (Model.AllowedQuantities.Count > 0)
            {
              @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, "QTY", new { @class = "form-control ddlAttrb" })

            }
            else
            {

              <div>
                <div>
                  <input id="sub" type='button' value='-' class='sub quantity-btn qtyminus' field='EnteredQuantity' />
                  @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty", id = "EnteredQuantity", type = "number", style = "width: 40px" })
                  <input id="add" type='button' value='+' class='add quantity-btn qtyplus' field='EnteredQuantity' />
                </div>
              </div>


              //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
              <script type="text/javascript">
                $(document).ready(function () {
                  $("#@Html.FieldIdFor(model => model.EnteredQuantity)").keydown(function (event) {
                    if (event.keyCode == 13) {
                      $("#add-to-cart-button-@Model.ProductId").click();
                      return false;
                    }
                  });
                });
              </script>

            }
          </div>


          




          
        }

      </div>





    }

  </div>

  <div class="col-12">
    @if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
    {
      if (!Model.DisableBuyButton)
      {
          var addToCartText = "";
          if (Model.UpdatedShoppingCartItemId > 0)
          {
            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
          }
          else
          {
            addToCartText = "add to bag";  
            if (Model.IsRental)
            {
              addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.AvailableForPreOrder)
            {
              addToCartText = T("ShoppingCart.PreOrder").Text;
            }
          }

        <button type="button" id="add-to-cart-button-@Model.ProductId" class="btn-addcart button_sare"
            data-productid="@Model.ProductId"
            onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;">
          <span>@addToCartText</span>
        </button>

        <div id="add2cart-notification" title="@T("Common.Notification")" style="display:none;"></div>
      }
    }
  </div>

