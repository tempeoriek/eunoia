@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using Nop.Web.Models.Catalog;

@helper Text_Truncate(string input, int length)
{
	if (input.Length <= length)
	{
		@Html.Raw(@input)
	}
	else
	{
		@Html.Raw(@input.Substring(0, length))<text>...</text>
	}
}


@helper Price_Modifier(string input, int length)
{
	if (input.Length <= length)
	{
		@Html.Raw(@input)
	}
	else
	{
		@Html.Raw(@input.Substring(0, length))<text>...</text>
	}
}

@{
	//prepare "Add to cart" AJAX link
	string addtocartlink = "";
	var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
	var quantity = 1;
	if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
	{
		addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
	}
	else
	{
		addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
	}
}


<div class="product-item">
	<div>

		@if(Model.Quantity > 0)
		{
			@*if (Model.AlternateImage != null)
			{
				<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" class="clean">
					<img data-alt-src="@Model.AlternateImage.ImageUrl" src="@Model.DefaultPictureModel.ImageUrl" class="img-responsive center-block swapImg" />
				</a>
			}
			else
			{*@
				<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" class="clean">
					<img src="@Model.DefaultPictureModel.ImageUrl" class="img-fluid center-block" />
				</a>
			//}
		}
		else
		{
			<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" class="clean">
				<div class="image__blur">
					<img class="img-fluid center-block" src="@Model.DefaultPictureModel.ImageUrl" />
				</div>
			</a>
		}
	</div>
  
	@*<div class="description">
		<h2><a class="clean" href="@Url.RouteUrl("Product", new { SeName = Model.SeName})">@Html.DisplayFor(m => m.Name)</a></h2>
		<div class="prices text-center">
				@if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice) || Model.ProductPrice.DisplayTaxShippingInfo){
					if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice)){
						
					<div class="price old--price"><span style="color:#965226;text-decoration:line-through"><span style="color:#969696">@Model.ProductPrice.OldPrice</span></span></div>
						
					}
					<div class="price actual--price">@Model.ProductPrice.Price</div>
				}
				else
				{
					<div class="price">@Model.ProductPrice.Price</div>
				}
			</div>
		@if (Model.Quantity == 0)
		{
			<div class="image__text text-center"><span class="out-of-stock">Out of stock</span></div>
		}
		else if (Model.MarkAsNew)
		{
			<div class="image__text text-center"><span class="new-item">NEW</span></div>
		}
	</div>*@

	<div class="row">
		<div class="col-6 col-md-6" style="    justify-content: end; align-items: center; display: flex;">
			<div class="row">
					<div class="col-12 text-left">
						<span><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})">@Html.DisplayFor(m => m.Name)</a></span>
					</div>
					<div class="col-12 text-left">
						<span><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})">@Html.DisplayFor(m => m.Name)</a></span>
					</div>
			</div>
		</div>

		<div class="col-6 col-md-6">
			<div class="row">
				@if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice) || Model.ProductPrice.DisplayTaxShippingInfo){
					<div class="col-12 text-right">
						@if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice)){
							<span style="color:#965226;text-decoration:line-through;">
								<span style="color:#969696">
									@Model.ProductPrice.OldPrice
								</span>
							</span>
						}
					</div>
					
					<div class="col-12 text-right">
						@Model.ProductPrice.Price
					</div>
				}
				else
				{
					<div class="col-12 text-right">
						@Model.ProductPrice.Price
					</div>
				}
			</div>
		</div>
	</div>
   

</div>
